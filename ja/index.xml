<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ウィドドの履歴書</title>
    <link>https://nswryan.github.io/ja/</link>
    <description>Recent content on ウィドドの履歴書</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <atom:link href="https://nswryan.github.io/ja/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://nswryan.github.io/ja/qna/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://nswryan.github.io/ja/qna/</guid>
      <description>&lt;h1 id=&#34;面談の質問の対策&#34;&gt;面談の質問の対策。&lt;/h1&gt;&#xA;&lt;h2 id=&#34;compression-overhead&#34;&gt;Compression overhead&lt;/h2&gt;&#xA;&lt;p&gt;データ圧縮はオーバーヘッドがあるのは否定しません。&#xA;なぜなら、データ圧縮はCPU計算時間の代わりに、&#xA;データ構造を換えて、データを小さくする技術からです。&lt;/p&gt;&#xA;&lt;p&gt;しかし、データ圧縮は場合によって利点があります。&#xA;例えば、ディスクのIOが遅い場合、&#xA;データ圧縮使えばシステムが早くなることはあります。&lt;/p&gt;&#xA;&lt;p&gt;HadoopStreamingとDistCP&#xA;この2つのアプリはMapReduceアプリです。&#xA;しかし、データの読み書き方が違いです。&#xA;StreamingはinputFormatによって読み方が違います。&#xA;例えば、textInputFormatを使えば、1行ずつ読み書きます。&#xA;DistCPの場合1-blockずつ読み書きます。&#xA;そのため、DistCPのほうが速いと考えています。&#xA;また、Streamingは行の前に行番号を入れます。&#xA;textInputFormatを使えばサイズが大きくなります。&#xA;この実験ではtextInputFormatを基づいて、&#xA;customInputFormatをつかいます。&#xA;このcustomInputFormat行番号を入れなくて、&#xA;生のデータをかきます。&#xA;そのため、データサイズがDistCPと同じになります。&lt;/p&gt;&#xA;&lt;h2 id=&#34;2017年に何をやっています&#34;&gt;2017年に何をやっています？&lt;/h2&gt;&#xA;&lt;p&gt;帰国から奨学金を応募するため、色々な準備委が必要でした。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;まず、はTOEFLです。&lt;/li&gt;&#xA;&lt;li&gt;次は、受験のことです。&lt;/li&gt;&#xA;&lt;li&gt;面談もあります。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;私韓国で２年間帰国していませんでした。そのため、家族と時間を過ごしたかった。&#xA;今でも３年間ぐらい帰国していませんが、二年間前家族が会いに来ました。&lt;/p&gt;&#xA;&lt;h2 id=&#34;学生時代の経験&#34;&gt;学生時代の経験:&lt;/h2&gt;&#xA;&lt;p&gt;生徒会役員をしました。&#xA;仕事内容は後輩達の授業について相談です。&#xA;後輩から授業でなにか不安やよく理解できない課題について問題&#xA;があったら私と他の役員と手伝って上げました。&lt;/p&gt;&#xA;&lt;h2 id=&#34;力を入れたこと&#34;&gt;力を入れたこと：&lt;/h2&gt;&#xA;&lt;p&gt;私は買うより自分で作る方が好きです。&#xA;個人的なプロジェクトが多いだと思います。&lt;/p&gt;&#xA;&lt;p&gt;例えば、LEDで３D 画面のプレジェクトでした。&#xA;結果は失敗なんですが、今は理由やもう分かりました。&#xA;今時間と材料があればもう一度やりたいです。&lt;/p&gt;&#xA;&lt;p&gt;また他のプロジェクトもあります。&#xA;私のサイトでチェック出来ます。&lt;/p&gt;&#xA;&lt;h2 id=&#34;日本にある問題&#34;&gt;日本にある問題：&lt;/h2&gt;&#xA;&lt;p&gt;担当者卒業の後。&#xA;私日本に来たばかり、担当者が半年ぐらいいました。&#xA;資料について手続きや個人的な問題があったら、担当さんが手伝いました。&#xA;しかし、彼は卒業後、ほかの頼れる人がいなかったでした。&#xA;幸いは私は彼を卒業前に、日本語の授業を参加しました。&#xA;最低限な日本語で生活をしました。&lt;/p&gt;&#xA;&lt;p&gt;2年後は寮で住むことができなくなるので、&#xA;アパと探しをしました。&#xA;最初は友達からアパとを紹介してもらいました。&#xA;しかしその後は自分で資料や契約のことやりました。&#xA;そのときはとても心配しました。&#xA;なぜなら、私は日本語の授業参加ことがありましたが、&#xA;日本人と会話する機械はほとんどありませんでした。&#xA;結果的には私の担当者言ったとおりでした。&#xA;なんとか成る　でした。&lt;/p&gt;&#xA;&lt;h2 id=&#34;面白い話&#34;&gt;面白い話：&lt;/h2&gt;&#xA;&lt;p&gt;学士をするときある面白い&lt;/p&gt;&#xA;&lt;h3 id=&#34;背景&#34;&gt;背景：&lt;/h3&gt;&#xA;&lt;p&gt;３人友達とRabbitと言う組み込みデバイスをプログラミング宿題をするでした。&#xA;友達のコードはなかなか進まなかったので、私がコードのことを手伝いしました。&#xA;しかし、最後には私の点数だけ低でした。&#xA;友達は全員Aをもらいました。私だけB+をもらいました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;経験&#34;&gt;経験：&lt;/h3&gt;&#xA;&lt;p&gt;点数をもらった時は悔しいでした。&#xA;授業の先生と相談し、理由を聞きました。&#xA;理由はわたしのコードの説明は足りないでした。&#xA;私はその理由を私の弱点として認めました。&#xA;先生にも一回の機会をいただきました。&#xA;その組み込みデバイスの学習用の資料を作りました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ウィドドの履歴書</title>
      <link>https://nswryan.github.io/ja/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://nswryan.github.io/ja/about/</guid>
      <description>&lt;h1 id=&#34;ryan-nathanael-soenjoto-widodos-履歴書&#34;&gt;Ryan Nathanael Soenjoto Widodo’s 履歴書。&lt;/h1&gt;&#xA;&lt;p&gt;更新日：2025年01月23日&lt;/p&gt;&#xA;&lt;h2 id=&#34;私について&#34;&gt;私について&lt;/h2&gt;&#xA;&lt;figure class=&#34;avatar&#34;&gt;&lt;img src=&#34;https://nswryan.github.io/WidodoPhoto.jpg&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;コンピュータサイエンスの博士号を持ち、ビッグデータの保存と処理、データ削減スキーム、不揮発性メモリを専門とする高度なスキルを持つデータエンジニア。高度なETLツールを使用したスケーラブルなデータパイプライン構築における2年以上の実務経験。学術研究を活用し、データ効率とパフォーマンスを向上させる革新的なソリューションを開発することに長けている。動的な環境における複雑なデータ課題を解決するために、豊富な知識と技術スキルを活用したいと考えている。&lt;/p&gt;&#xA;&lt;p&gt;メール:&#xA;ryannswidodo[AT]gmail.com&lt;/p&gt;&#xA;&lt;p&gt;Github repositories:&#xA;&lt;a href=&#34;https://github.com/NSWRyan?tab=repositories&#34;&gt;https://github.com/NSWRyan?tab=repositories&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Google Scholar:&#xA;&lt;a href=&#34;https://scholar.google.com/citations?user=dKSR9zEAAAAJ&amp;amp;hl=en&#34;&gt;https://scholar.google.com/citations?user=dKSR9zEAAAAJ&amp;hl=en&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ORCID:&#xA;&lt;a href=&#34;https://orcid.org/0000-0003-3929-7377&#34;&gt;https://orcid.org/0000-0003-3929-7377&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;linkedin:&#xA;&lt;a href=&#34;https://www.linkedin.com/in/rnswidodo1/&#34;&gt;https://www.linkedin.com/in/rnswidodo1/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;研究分野&#34;&gt;研究分野&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Key-value storage・Key-Valueストレージ&lt;/li&gt;&#xA;&lt;li&gt;Persistent memory・不揮発性メモリ&lt;/li&gt;&#xA;&lt;li&gt;Big data・ビッグデータ&lt;/li&gt;&#xA;&lt;li&gt;Deduplication and compression・重複排除やデータ圧縮&lt;/li&gt;&#xA;&lt;li&gt;Mobile cloud computing・モバイルクラウドコンピューティング&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;プロジェクト&#34;&gt;プロジェクト&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;プロジェクト名&lt;/th&gt;&#xA;          &lt;th&gt;状態&lt;/th&gt;&#xA;          &lt;th&gt;コラボレーター&lt;/th&gt;&#xA;          &lt;th&gt;コメント&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;MySQLDebeziumKafka&lt;/td&gt;&#xA;          &lt;td&gt;完成&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;ETLプロセスをより効率的にする変更データキャプチャ(CDC)技術のセルフスタディ。https://github.com/NSWRyan/MySQLDebeziumKafka&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;MultiWayLoader&lt;/td&gt;&#xA;          &lt;td&gt;完成&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;DBから一般的なファイル形式、またはJDBC経由で別のDBにデータをコピーするJavaライブラリ。https://github.com/NSWRyan/MultiWayLoader&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;FormattedFileWriter&lt;/td&gt;&#xA;          &lt;td&gt;完成&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;一般的なフォーマット（CSV、Avro、Parquet、ORC）への書き込みを容易にするJavaライブラリ。https://github.com/NSWRyan/FormattedFileWriter&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;NVKVS&lt;/td&gt;&#xA;          &lt;td&gt;完成&lt;/td&gt;&#xA;          &lt;td&gt;加藤和彦教授（筑波大学）、阿部博丈教授（筑波大学）&lt;/td&gt;&#xA;          &lt;td&gt;インテル Optane DCPM メモリ（不揮発性メモリ（NVM））用の Wisckey の実装。NVM内の回転ログにデータを保存する。プロジェクトページ: &lt;a href=&#34;https://github.com/NSWRyan/NVKVS&#34;&gt;https://github.com/NSWRyan/NVKVS&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;HDRF&amp;rsquo;s block mirroring&lt;/td&gt;&#xA;          &lt;td&gt;完成&lt;/td&gt;&#xA;          &lt;td&gt;Professor Kazuhiko Kato (University of Tsukuba), Professor Hirotake Abe (University of Tsukuba)&lt;/td&gt;&#xA;          &lt;td&gt;一つのHDRFの問題は”node to node”データ通信の大きさです。例えば、block replicationをする時、HDRFは原ブロックを使い、ネットワーク通信が大きく成ります。HDRFのモジュール性により、追加モジュールが簡単にHDRFに繋がれるので、この問題を解決できます。そのため、block mirroringと言う追加モジュールを作り、問題を解説します。Block mirroringはHDRFのblock replicationを置き換え、削減したデータを使い、ネットワーク通信を最小限に抑えます。https://github.com/NSWRyan/HDRF&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Data reduction schemes in Distributed File Systems&lt;/td&gt;&#xA;          &lt;td&gt;完成&lt;/td&gt;&#xA;          &lt;td&gt;Professor Kazuhiko Kato (University of Tsukuba), Professor Hirotake Abe (University of Tsukuba)&lt;/td&gt;&#xA;          &lt;td&gt;このプロジェクトはDistributed File System (DFS)でデータ圧縮技術を研究するプロジェクトです。アルゴリズムが実装されているレイヤーにより、DFSのスループットの差があります。この研究でDFSレイヤーにデータ圧縮アルゴリズムうを直接に実装します。そのため、新しい実装方を設計し、実験環境に動きさせ、DFSのパフォマンスを測かりました。もっと詳しく、&lt;a href=&#34;https://dl.acm.org/doi/abs/10.1145/3409963.3410500&#34;&gt;APSys2020&lt;/a&gt;にある論文をチェックしてください。https://github.com/NSWRyan/HDRF&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;High throughput Content-Dependent Chunking (CDC) algorithm&lt;/td&gt;&#xA;          &lt;td&gt;完成&lt;/td&gt;&#xA;          &lt;td&gt;Professor Hyotaek Lim (Dongseo University), Dr. Mohammed Atiquzzaman (University of Oklahoma)&lt;/td&gt;&#xA;          &lt;td&gt;Deduplicationのスループットを増加するために、新しい高効率chunking（データを分解する）アルゴリズムです。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Smart Deduplication Mobile&lt;/td&gt;&#xA;          &lt;td&gt;完成&lt;/td&gt;&#xA;          &lt;td&gt;Professor Hyotaek Lim (Dongseo University), Dr. Mohammed Atiquzzaman (University of Oklahoma)&lt;/td&gt;&#xA;          &lt;td&gt;モバイルクラウドアプリケーションぬ向けるアンドロイドアプリです。パソコンと違い、モバイル機器のデータは高いです。例えば、4Gのデータサービスの値段は光ファイバのサービスより値段が高いです。また、モバイル機器はストレージや電源に限っています。そのため、このアプリは「deduplication」という重複排除技術を使い、データを短縮し、クラウドにデータをアップロードします。また、このアプリは最高の効率を到達ためにデータのタイプにより、別なdeduplication技術を使います。例えば、メディアファイルなら、file-deduplicationをつかいます。重複が多いファイルならvariable-block deduplicationをつかいます。このように、このアプリは学習を使い、ファイルタイプを基づき、自動でdeduplicationの技術を決められます。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;An Andorid Application for controlling Quadcopter&lt;/td&gt;&#xA;          &lt;td&gt;完成&lt;/td&gt;&#xA;          &lt;td&gt;Petrus Santoso (Petra Christian University)&lt;/td&gt;&#xA;          &lt;td&gt;学士課程の卒論プロジェクトです。このプロジェクトはあるアプリケーションのソースコドを見ないで、自作アプリケーションを作るプロジェクトです。&lt;a href=&#34;https://www.parrot.com/en/drones&#34;&gt;Parrot AR.Drone 2.0&lt;/a&gt;のアプリを基づき、そのアプリのパケットをTCPDumpで検査し、パケットの内容からでデータを抽出し、原アプリを真似するアンドロイドアプリを作りました。原アプリのようにこのアプリはドローンをコントロールでき、情報を表示でき、映像も映れます。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;論文&#34;&gt;論文&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Widodo, R. N., Lim, H., &amp;amp; Atiquzzaman, M. (2017). SDM: Smart deduplication for mobile cloud storage. Future Generation Computer Systems, 70, 64-73.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.sciencedirect.com/science/article/pii/S0167739X16302084&#34;&gt;https://www.sciencedirect.com/science/article/pii/S0167739X16302084&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Widodo, R. N., Lim, H., &amp;amp; Atiquzzaman, M. (2017). A new content-defined chunking algorithm for data deduplication in cloud storage. Future Generation Computer Systems, 71, 145-156.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.sciencedirect.com/science/article/pii/S0167739X16305829&#34;&gt;https://www.sciencedirect.com/science/article/pii/S0167739X16305829&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Widodo, R. N., &amp;amp; Lim, H. (2017, January). RDM: Rapid Deduplication for Mobile Cloud Storage. In Proceedings of the 8th International Conference on Computer Modeling and Simulation (pp. 14-18).&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://dl.acm.org/doi/abs/10.1145/3036331.3036357&#34;&gt;https://dl.acm.org/doi/abs/10.1145/3036331.3036357&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Widodo, R. N. S., Abe, H., &amp;amp; Kato, K. (2020, August). HDRF: Hadoop data reduction framework for hadoop distributed file system. In Proceedings of the 11th ACM SIGOPS Asia-Pacific Workshop on Systems (pp. 122-129).&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://dl.acm.org/doi/abs/10.1145/3409963.3410500&#34;&gt;https://dl.acm.org/doi/abs/10.1145/3409963.3410500&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Widodo, R. N. S., Abe, H., &amp;amp; Kato, K. (2020 November). DFS on a Diet: Enabling Reduction Schemes on Distributed File Systems. SC20 Research Poster.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://sc20.supercomputing.org/proceedings/tech_poster/poster_files/rpost103s2-file3.pdf&#34;&gt;http://sc20.supercomputing.org/proceedings/tech_poster/poster_files/rpost103s2-file3.pdf&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://sc20.supercomputing.org/proceedings/tech_poster/poster_files/rpost103s2-file2.pdf&#34;&gt;http://sc20.supercomputing.org/proceedings/tech_poster/poster_files/rpost103s2-file2.pdf&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Widodo, R. N. S., Abe, H., &amp;amp; Kato, K. (2021). Hadoop Data Reduction Framework: Applying Data Reduction at the DFS Layer. IEEE Access, 9, 152704-152717.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://ieeexplore.ieee.org/iel7/6287639/6514899/09612160.pdf&#34;&gt;https://ieeexplore.ieee.org/iel7/6287639/6514899/09612160.pdf&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Widodo, R. N. S., Ohtsuji, H., Hayashi, E., Yoshida, E., Abe, H., &amp;amp; Kato, K. (2022). NVKVS: Non-Volatile Memory Optimized Key-Value Separated LSM-Tree. Journal of Information Processing, 30, 332-342.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.jstage.jst.go.jp/article/ipsjjip/30/0/30_332/_pdf&#34;&gt;https://www.jstage.jst.go.jp/article/ipsjjip/30/0/30_332/_pdf&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;博士論文. (2022). Design and Implementation of Data Reduction Enabled Distributed File System.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tsukuba.repo.nii.ac.jp/record/2005453/files/DA010258.pdf&#34;&gt;https://tsukuba.repo.nii.ac.jp/record/2005453/files/DA010258.pdf&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;詳細については、私の&lt;a href=&#34;https://scholar.google.com/citations?user=dKSR9zEAAAAJ&amp;amp;hl=en&amp;amp;authuser=1&amp;amp;oi=ao&#34;&gt;Google Scholar page&lt;/a&gt;をチェックしてください。&lt;/p&gt;</description>
    </item>
    <item>
      <title>その他</title>
      <link>https://nswryan.github.io/ja/misc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://nswryan.github.io/ja/misc/</guid>
      <description>&lt;h2 id=&#34;このページについて&#34;&gt;このページについて&lt;/h2&gt;&#xA;&lt;p&gt;このページはウィドドについて個人的や雑な情報が書かれています。もしかしたら、興味があれば読んでください。興味がなかったら、&lt;a href=&#34;https://nswryan.github.io/ja/about/&#34;&gt;私の履歴書&lt;/a&gt;をチェックしてください。&lt;/p&gt;&#xA;&lt;h2 id=&#34;私について&#34;&gt;私について&lt;/h2&gt;&#xA;&lt;figure class=&#34;avatar&#34;&gt;&lt;img src=&#34;https://nswryan.github.io/photobaby.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;私はものやことを学ぶや新しいことを探るのは楽しいだと思います。また、問題を解決やものを修理するのは好きです（社交問題以外）。暇の時、新しい漢字を勉強するや面白いものを作るのも趣味です。色々なゲームもします。例えば、戦略ビデオゲームです。&lt;/p&gt;&#xA;&lt;p&gt;私はパソコンのオタクです。最初はPentiumIIのパソコンで&lt;a href=&#34;https://en.wikipedia.org/wiki/Supaplex&#34;&gt;Supaplex (パズルゲーム)&lt;/a&gt;と言うゲームをしました。中学校のとき、親はPentiumIIIのパソコンを買ってくれました。そのパソコンで、&lt;a href=&#34;https://en.wikipedia.org/wiki/Command_%26_Conquer:_Red_Alert_%28series%29&#34;&gt;Red Alert&lt;/a&gt;という戦略ゲームをしました。また、親はC2D 6600とNvidia 8800 GTS 384 MBを使用パソコンを買ってくれました。自分でお金をもらった後、自作のパソコンも作りました。そのパソコンはIntel i7-6700と２つのRX480ー8GBを作用しています。まとめに、その多くの変なパソコンの部品の名前を覚えるのに、インドネシアの島の名が覚えできない人です。&lt;/p&gt;&#xA;&lt;h2 id=&#34;質疑応答で自分を説明します&#34;&gt;質疑応答で自分を説明します&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Q/A&lt;/th&gt;&#xA;          &lt;th&gt;質問・答え&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Q1&lt;/td&gt;&#xA;          &lt;td&gt;君の目的は何ですか？&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;A1&lt;/td&gt;&#xA;          &lt;td&gt;沢山面白いことをすると他の人に良い影響をするであります。なぜなら、私は新しいものを番協するのは面白いだと思います。その理由から、私は研究野道を選び、新しいものを作ることを希望すます。新しものをつくればやいまの既存しているシステムを改善できれば幸いであります。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Q2&lt;/td&gt;&#xA;          &lt;td&gt;プロジェクトのアイデアはどこで得ましたか？&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;A2&lt;/td&gt;&#xA;          &lt;td&gt;色々な由来があります。一番目の由来は自分の問題であります。また、論文を読み、他の人の問題や研究を理解できます。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Q3&lt;/td&gt;&#xA;          &lt;td&gt;なぜ進学を選びましたか。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;A3&lt;/td&gt;&#xA;          &lt;td&gt;それは個人的な選択であります。２０１３年に仕事をしたが、退屈になりました。なぜなら、研究より勉強で来ることは少ないであります。その理由から、私は進学を決めました。学校と研究は新しい情報的には豊富であります。数年間研究をした後、私は研究をするのは好きだと考えます。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Q4&lt;/td&gt;&#xA;          &lt;td&gt;なぜインドネシアで進学しませんですか？&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;A4&lt;/td&gt;&#xA;          &lt;td&gt;留学しながら他のことは勉強できますからであります。例えば、文化や人の常識や言語が勉強できます。その勉強の結果から、良いことが自分にして、他の人に影響を与えられるかもしれません。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Q5&lt;/td&gt;&#xA;          &lt;td&gt;なぜ韓国と日本に留学ために選びましたか？&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;A5&lt;/td&gt;&#xA;          &lt;td&gt;色々な理由はあります。1つ目は私は奨学金をもらったからであります。2つ目は、その２つの国はアジアの中に発展した国です。その発展の理由や方法を学びたいので留学をしながら、色々なことを学ぶことにしています。3つ目はその2つの国は欧州や米国よりインドネシアに近いであります。距離が小さいから、親を訪問するのは経済的と時間的には安くなる。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Q6&lt;/td&gt;&#xA;          &lt;td&gt;君の韓国語は下手です。2年間韓国で住んでいましたのに、なぜ韓国語を学んでいませんでしたか。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;A6&lt;/td&gt;&#xA;          &lt;td&gt;期限付きによっていくつの題を勉強するのは限ります。私の場合、研究のために時間を過ごすのは利益があるだと思います。なぜなら、私はその期限以上韓国で活動をするよていはありませんでした。その理由から、研究に時間を投資したほうがいいだと思いました。結果は、韓国語は最低限しか話しません。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Q7&lt;/td&gt;&#xA;          &lt;td&gt;今までの旅から何を学びましたか。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;A7&lt;/td&gt;&#xA;          &lt;td&gt;国籍や人類を基づいて人を判断するは無理であります。なぜなら、人の常識はむん化によって違うからであります。同じ文化からとしても、人は別な方式を目ているかもしれません。多国で色々な人を出会い、悪いのもあり、良いのもあり、その理由から人気の信念から人を判断するは愚かだと思います。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Q8&lt;/td&gt;&#xA;          &lt;td&gt;なぜ診断と工務が好きですか？&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;A8&lt;/td&gt;&#xA;          &lt;td&gt;子供の時、親は沢山パズルの玩具買ってくれましたので、問題を解決するのは好きになりました。例えば、キューブ型のパズルを持ています。私はそのパズルの解決方法を長い時間で考えていました。「解決方法はいくつあるでしょうか。キューブの面と同じですか。もしかして、答え数はキューブ面の数以上あるかもしれない。」と考えていました。そのときから、ものを分解することや問題を解決することは趣味になりました。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;他の質問があれば、メールで送ったら幸いであります。&lt;/p&gt;&#xA;&lt;h2 id=&#34;個人的な事業プロジェクト&#34;&gt;個人的な事業（プロジェクト）&lt;/h2&gt;&#xA;&lt;p&gt;私は面白いだと思うプロジェクトです。&lt;/p&gt;&#xA;&lt;h3 id=&#34;3d-ledキューブ&#34;&gt;3D LED　キューブ&lt;/h3&gt;&#xA;&lt;p&gt;状態: 延期&lt;/p&gt;&#xA;&lt;p&gt;説明 :&lt;/p&gt;&#xA;&lt;p&gt;Arduinoを使うプロジェクトです。LEDを8x8x8キューブ型に立っており、512のLEDを使い、3Dの映像を表示出来ます。しかし、Arduinoのみ512のLEDを経営するのは無理です。そのため、ラッチとデマルチプレクサを使う企画を作りました。&lt;/p&gt;&#xA;&lt;p&gt;しかし、残念ながら、多くのLEDがESDで死んでしまったのでこのプロジェクトはいま一時停止になりました。その理由はEMC技師として働いている時理解できます。時間と予算があれば、再機動死体だと思います。&lt;/p&gt;&#xA;&lt;h3 id=&#34;opencvタッチ鉛筆&#34;&gt;OpenCVタッチ鉛筆&lt;/h3&gt;&#xA;&lt;p&gt;状態: 完成&lt;/p&gt;&#xA;&lt;p&gt;説明:&#xA;このプロジェクトはOpenCVと赤外線カメラ(Wiimoteも使える)と円の形紙を使い、パソコンを制御するプロジェクトです。&lt;/p&gt;&#xA;&lt;p&gt;使い方：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;まず、円の形紙をモニタの隅に貼る。普通のモニターなら4つを貼ります。&lt;/li&gt;&#xA;&lt;li&gt;カメラをモニタに向けます。&lt;/li&gt;&#xA;&lt;li&gt;円の形紙を鉛筆やペンに付けます。&lt;/li&gt;&#xA;&lt;li&gt;プログラムを実用し、鉛筆を使い、モニタを指します。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;なぜマウスのように使える？&#xA;このプロジェクトはOpenCVを使い、カメラからの画像を処理出来るプロジェクトです。OpenCVで画像から丸いもの(blob)の座標が見つかれられます。その座標を使い、モニターに対する鉛筆の相対位置が計算できます。最後に、Windowsライブラリを使い、ポインターを動く。このように、鉛筆でパソコンを使用できます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>連絡先</title>
      <link>https://nswryan.github.io/ja/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://nswryan.github.io/ja/contact/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;メール: &lt;a href=&#34;ryannsw@osss.cs.tsukuba.ac.jp&#34;&gt;ryannsw@osss.cs.tsukuba.ac.jp&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;</description>
    </item>
  </channel>
</rss>
